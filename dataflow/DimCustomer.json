{
	"name": "DimCustomer",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "raw_customers_parquet",
						"type": "DatasetReference"
					},
					"name": "Customers"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "edw_dimcustomer_parquet",
						"type": "DatasetReference"
					},
					"name": "SinkCustomer"
				}
			],
			"transformations": [
				{
					"name": "MapCustomers"
				}
			],
			"scriptLines": [
				"source(output(",
				"          customerNumber as integer,",
				"          customerName as string,",
				"          contactLastName as string,",
				"          contactFirstName as string,",
				"          phone as string,",
				"          addressLine1 as string,",
				"          addressLine2 as string,",
				"          city as string,",
				"          state as string,",
				"          postalCode as string,",
				"          country as string,",
				"          salesRepEmployeeNumber as integer,",
				"          creditLimit as decimal(38,18)",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> Customers",
				"Customers select(mapColumn(",
				"          customerNumber,",
				"          customerName,",
				"          creditLimit,",
				"          salesRepEmployeeNumber,",
				"          city,",
				"          state,",
				"          country",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> MapCustomers",
				"MapCustomers sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          Prop_0 as string,",
				"          Prop_1 as string,",
				"          Prop_2 as string,",
				"          Prop_3 as string,",
				"          Prop_4 as string,",
				"          Prop_5 as string,",
				"          Prop_6 as string,",
				"          Prop_7 as string,",
				"          Prop_8 as string,",
				"          Prop_9 as string,",
				"          Prop_10 as string,",
				"          Prop_11 as string,",
				"          Prop_12 as string,",
				"          Prop_13 as string,",
				"          Prop_14 as string,",
				"          Prop_15 as string,",
				"          Prop_16 as string,",
				"          Prop_17 as string,",
				"          Prop_18 as string,",
				"          Prop_19 as string,",
				"          Prop_20 as string,",
				"          Prop_21 as string,",
				"          Prop_22 as string,",
				"          Prop_23 as string,",
				"          Prop_24 as string,",
				"          Prop_25 as string,",
				"          Prop_26 as string,",
				"          Prop_27 as string,",
				"          Prop_28 as string,",
				"          Prop_29 as string,",
				"          Prop_30 as string,",
				"          Prop_31 as string,",
				"          Prop_32 as string,",
				"          Prop_33 as string,",
				"          Prop_34 as string,",
				"          Prop_35 as string",
				"     ),",
				"     format: 'parquet',",
				"     truncate: true,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SinkCustomer"
			]
		}
	}
}